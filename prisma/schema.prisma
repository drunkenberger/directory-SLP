// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Places table to store all locations
model Place {
  id          String   @id @default(cuid())
  name        String
  category    String
  address     String
  city        String?
  phone       String?
  website     String?
  instagram   String?
  latitude    Float?
  longitude   Float?
  description String?  @db.Text
  imageUrl    String?
  hours       String?  @db.Text
  featured    Boolean  @default(false)
  rating      Float?
  priceLevel  Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tags        Tag[]    @relation("PlaceToTag")
  photos      Photo[]
  reviews     Review[]
  events      Event[]
}

// Tags for places and events
model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  places    Place[]  @relation("PlaceToTag")
  events    Event[]  @relation("EventToTag")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Photos for places and events
model Photo {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  place     Place?   @relation(fields: [placeId], references: [id])
  placeId   String?
  event     Event?   @relation(fields: [eventId], references: [id])
  eventId   String?
  featured  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Reviews for places
model Review {
  id        String   @id @default(cuid())
  author    String
  rating    Float
  text      String   @db.Text
  place     Place    @relation(fields: [placeId], references: [id])
  placeId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Events table
model Event {
  id          String   @id @default(cuid())
  title       String
  description String?  @db.Text
  startDate   DateTime
  endDate     DateTime
  location    String
  category    String
  imageUrl    String?
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  place       Place?   @relation(fields: [placeId], references: [id])
  placeId     String?
  tags        Tag[]    @relation("EventToTag")
  photos      Photo[]
}

// Featured photos table for homepage
model FeaturedPhoto {
  id        String   @id @default(cuid())
  title     String
  subtitle  String?
  imageUrl  String
  link      String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 